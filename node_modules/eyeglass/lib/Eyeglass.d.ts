import EyeglassModules from "./modules/EyeglassModules";
import { Options as Opts, Config, EyeglassConfig } from "./util/Options";
import Assets from "./assets/Assets";
import { DeprecateFn } from "./util/deprecator";
import { IEyeglass } from "./IEyeglass";
import { SassImplementation, helpers as sassHelpers } from "./util/SassImplementation";
export declare function resetGlobalCaches(): void;
export default class Eyeglass implements IEyeglass {
    static VERSION: string;
    deprecate: DeprecateFn;
    options: Config;
    assets: Assets;
    modules: EyeglassModules;
    private onceCache;
    constructor(options: Opts);
    static helpers(sass: SassImplementation): ReturnType<typeof sassHelpers>;
    once<R>(key: string, firstTime: () => R): R | undefined;
    once<R>(key: string, firstTime: () => R, otherwise: () => R): R;
}
export declare function _forbidNodeSassArg(arg: unknown): Pick<EyeglassConfig, "engines"> | void;
//# sourceMappingURL=Eyeglass.d.ts.map