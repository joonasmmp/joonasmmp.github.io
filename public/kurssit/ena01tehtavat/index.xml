<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ENA01 - Kielitaito &amp; Vuorovaikutus on PJMM - Englannin materiaalia</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/</link><description>Recent content in ENA01 - Kielitaito &amp; Vuorovaikutus on PJMM - Englannin materiaalia</description><generator>Hugo -- gohugo.io</generator><language>fi</language><lastBuildDate>Mon, 26 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://joonasmmp.github.io/kurssit/ena01tehtavat/index.xml" rel="self" type="application/rss+xml"/><item><title>Tunnista aikamuoto</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_tunnistaaikamuoto/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_tunnistaaikamuoto/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item><item><title>Has vai have?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_hashave/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_hashave/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
modal.classList.add("showModal");
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.questionIndex === this.</description></item><item><title>Epäsäännölliset verbit a-e</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitae/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitae/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item><item><title>Epäsäännölliset verbit f-k?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitfk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitfk/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item><item><title>Epäsäännölliset verbit l-r?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitlr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitlr/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item><item><title>Epäsäännölliset verbit s-w?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitsw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitsw/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item><item><title>Epäsäännölliset verbit: kaikki</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitkaikki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitkaikki/</guid><description>Oh dear!
Väärä vastaus
Nyt ei menny ihan niinku piti, mutta yritä uudestaan!
Takaisin alkuun
function Quiz(questions) {
this.score = 0;
this.questions = questions;
this.questionIndex = 0;
}
Quiz.prototype.getQuestionIndex = function() {
return this.questions[this.questionIndex];
}
Quiz.prototype.guess = function(answer) {
if (this.getQuestionIndex().isCorrectAnswer(answer)) {
this.score++;
} else {
$("#modal").modal("show")
sleep(2000);
}
this.questionIndex++;
}
Quiz.prototype.isEnded = function() {
return this.</description></item></channel></rss>