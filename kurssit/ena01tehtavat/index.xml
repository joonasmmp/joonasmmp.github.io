<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ENA1 - Opiskelutaidot &amp; kieli-identiteetti on JPEL - Englannin materiaalia</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/</link><description>Recent content in ENA1 - Opiskelutaidot &amp; kieli-identiteetti on JPEL - Englannin materiaalia</description><generator>Hugo -- gohugo.io</generator><language>fi</language><lastBuildDate>Mon, 26 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://joonasmmp.github.io/kurssit/ena01tehtavat/index.xml" rel="self" type="application/rss+xml"/><item><title>Tunnista aikamuoto</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_tunnistaaikamuoto/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_tunnistaaikamuoto/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Has vai have?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_hashave/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_hashave/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Apuverbit: Kirjoita 1</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/preesens_kirjoita1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/preesens_kirjoita1/</guid><description>Täydennä verbimuodot annetun vihjeen mukaan.
1. I&amp;nbsp;&amp;nbsp; (osasin) play the piano when I was little 2. My brother &amp;nbsp;&amp;nbsp; (oli pystynyt löytämään) some money in the lake. 3. &amp;nbsp;&amp;nbsp; (voisitko ojentaa) the salt, please? 4. You &amp;nbsp;&amp;nbsp; (olisit voinut soittaa) before barging in here! 5. Yesterday I&amp;nbsp;&amp;nbsp; (täytyi viedä) my dog with me to school. 6. &amp;nbsp;&amp;nbsp; (kykenisitkö auttamaan) me with this umbrella?</description></item><item><title>Epäsäännölliset verbit a-e</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitae/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitae/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Epäsäännölliset verbit f-k?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitfk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitfk/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Epäsäännölliset verbit l-r?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitlr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitlr/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Epäsäännölliset verbit s-w?</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitsw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitsw/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Epäsäännölliset verbit: kaikki</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitkaikki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/ena01_epaverbitkaikki/</guid><description>function Quiz(questions) { this.score = 0; this.questions = questions; this.questionIndex = 0; } Quiz.prototype.getQuestionIndex = function() { return this.questions[this.questionIndex]; } Quiz.prototype.guess = function(answer) { if (this.getQuestionIndex().isCorrectAnswer(answer)) { this.score++; } else { displayFinalMessage();} this.questionIndex++; } Quiz.prototype.isEnded = function() { return this.questionIndex === this.questions.length; } function startOver() { location.reload(true); } function Question(text, choices, answer) { this.text = text; this.choices = choices; this.answer = answer; } Question.</description></item><item><title>Täydennä kolmas muoto</title><link>https://joonasmmp.github.io/kurssit/ena01tehtavat/epaverbit_kirjoita/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joonasmmp.github.io/kurssit/ena01tehtavat/epaverbit_kirjoita/</guid><description>Täydennä kolmas muoto annetusta verbistä. Kun vastaat oikein, verbien lista täydentyy.
go Check .verb-container { display: flex; align-items: center; margin-bottom: 10px; margin-top: 0.5em; } div#tehtava { padding-left: 4em; } .verb { margin-right: 5px; } .verb-list { margin-right: 5px; } input { padding: 5px; margin-right: 5px; margin-left: 0.7em; width: 7em; } .dark input{ background-color: #181A1B; padding: 5px; margin-right: 5px; margin-left: 0.7em; width: 7em; } .check-btn { padding: 5px 10px; color: white; border: none; cursor: pointer; background-color: #1F2937; border-radius: 5px; } .</description></item></channel></rss>